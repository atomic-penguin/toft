#!/bin/bash

if [ $# -eq 0 ]; then
	echo "Usage: `basename $0` <lenny|lucid|natty>"
	exit 1
fi

username=`id -nu`	
if [ ! "$username" = "root" ]; then
	echo "This command has to be run as root!"
	exit 1
fi

cache="/var/cache/lxc"
suite=$1

arch=$(arch)
if [ "$arch" == "x86_64" ]; then
    arch=amd64
fi

if [ "$arch" == "i686" ]; then
    arch=i386
fi

if [ -e "$cache/$suite-$arch.tar.gz" ]; then
	echo "Cache rootfs already exists!"
	exit 0
fi

# clean the cache dir
rm -rf $cache/$suite-$arch

lenny_packages=ifupdown,locales,libui-dialog-perl,netbase,net-tools,dialog,apt,apt-utils,resolvconf,iproute,inetutils-ping,dnsutils,dhcp3-client,ssh,lsb-release,wget,gpgv,gnupg,sudo,ruby,rubygems1.8,ruby-dev,libopenssl-ruby,build-essential,ssl-cert
lucid_packages=dialog,apt,apt-utils,resolvconf,iproute,inetutils-ping,dnsutils,dhcp3-client,ssh,lsb-release,wget,gpgv,gnupg,sudo,ruby,rubygems1.8,ruby-dev,libopenssl-ruby,build-essential,ssl-cert
natty_packages=dialog,apt,apt-utils,resolvconf,iproute,inetutils-ping,dnsutils,isc-dhcp-client,isc-dhcp-common,ssh,lsb-release,gnupg,netbase,lxcguest,sudo,ruby,rubygems1.8,ruby-dev,libruby,build-essential,wget,ssl-cert
# check the mini ubuntu was not already downloaded
rm -rf "$cache/$suite-$arch"
mkdir -p "$cache/$suite-$arch"
if [ $? -ne 0 ]; then
	echo "Failed to create '$cache/$suite-$arch' directory"
	exit 1
fi

# download a mini ubuntu into a cache
echo "Downloading ubuntu minimal ..."
eval "packages=\$${suite}_packages"
cmd="debootstrap --verbose --variant=minbase --components=main,universe --arch=$arch --include=$packages $suite $cache/$suite-$arch"
echo $cmd
eval $cmd
if [ $? -ne 0 ]; then
  echo "Failed to download the rootfs, aborting."
  exit 1
fi

echo "Download complete."

# install chef
cat <<EOF > "$cache/$suite-$arch/tmp/install-chef-ubuntu.sh"
echo "deb http://apt.opscode.com/ $suite-0.10 main" | tee /etc/apt/sources.list.d/opscode.list

mkdir -p /etc/apt/trusted.gpg.d
gpg --keyserver keys.gnupg.net --recv-keys 83EF826A
gpg --export packages@opscode.com | tee /etc/apt/trusted.gpg.d/opscode-keyring.gpg > /dev/null
apt-get update
apt-get install ucf --force-yes -y
yes | apt-get install opscode-keyring --force-yes -y # permanent upgradeable keyring

export DEBIAN_FRONTEND=noninteractive
apt-get install chef --force-yes -qy
EOF
chroot "$cache/$suite-$arch" bash /tmp/install-chef-ubuntu.sh

# compress root image
echo "Packaging rootfs ..."
(cd $cache/$suite-$arch && tar --exclude=$suite-$arch.tar.gz -zcf $suite-$arch.tar.gz .)
mv $cache/$suite-$arch/$suite-$arch.tar.gz $cache
