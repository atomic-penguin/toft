#!/bin/bash

username=`id -nu`	
if [ ! "$username" = "root" ]; then
	echo "This command has to be run as root!"
	exit 1
fi

sudo yum -y install wget
wget http://dl.dropbox.com/u/43220259/toft-lxc-0.0.6.noarch.rpm
sudo yum erase -y dhclient
sudo yum install -y --nogpgcheck toft-lxc-0.0.6.noarch.rpm
sudo yum install -y bind dhcp dhclient bridge-utils

gateway_ip="192.168.20.1"
subnet="192.168.20.0"
netmask="255.255.255.0"
range="192.168.20.2 192.168.20.254"
domain=foo

# setup bridge interface
if [[ ! `ip link ls dev br0` ]]; then
	brctl addbr br0
	ifconfig br0 $gateway_ip netmask $netmask up
	sysctl -w net.ipv4.ip_forward=1
fi

cat <<EOF > /etc/sysconfig/network-scripts/ifcfg-br0
DEVICE=br0
ONBOOT=yes
BOOTPROTO=static
DELAY=0
TYPE=Bridge
IPADDR=$gateway_ip
NETMASK=$netmask
MTU=1500
IPV6INIT=no
USERCTL=no
EOF

sudo sed -i "s/#*[ ^I]*net\.ipv4\.ip_forward[ ^I]*=[ ^I]*[01]/net\.ipv4\.ip_forward = 1/" /etc/sysctl.conf

# reset iptables
cat <<EOF > /etc/sysconfig/iptables
*nat
:PREROUTING ACCEPT [0:0]
:POSTROUTING ACCEPT [28:2070]
:OUTPUT ACCEPT [106:10068]
-A POSTROUTING -o eth0 -j MASQUERADE 
COMMIT
EOF

service iptables restart

# mount cgroup
if [[ ! -d /cgroup ]]; then
	mkdir -p /cgroup
fi

if [[ ! `mount | grep cgroup` ]]; then
	mount none -t cgroup /cgroup
fi

if [[ ! `grep "/cgroup" /etc/fstab` ]]; then
	cat <<EOF >> /etc/fstab
none /cgroup cgroup defaults 0 0
EOF
fi

# setup nameserver
cat <<EOF > /var/named/named.foo
\$ORIGIN $domain.
\$TTL 7200	; 2 hours
@				IN SOA	ns1.$domain. hostmaster.$domain. (
				3641625943 ; serial
				36000      ; refresh (10 hours)
				900        ; retry (15 minutes)
				36000      ; expire (10 hours)
				7200       ; minimum (2 hours)
				)
			NS	ns1.$domain.
ns1		A	$gateway_ip
EOF

## set bind to forward original nameservers
original_nameservers=`grep nameserver /etc/resolv.conf | cut -d " " -f2 | sed s/$gateway_ip//`
bind_forward_options=''
if [[ -n `echo $original_nameservers | tr -d ' \n\t\r'` ]]; then
	bind_forward_options="forwarders {
		`echo $original_nameservers | xargs -n 1 | awk '{ print $1";" }'`	
	};
	forward first;"
fi

mv /etc/named.conf /etc/named.conf.old
cat <<EOF > /etc/named.conf
options {
        directory       "/var/named";
        dump-file       "/var/named/data/cache_dump.db";
        statistics-file "/var/named/data/named_stats.txt";
        memstatistics-file "/var/named/data/named_mem_stats.txt";
		$bind_forward_options
};

logging {
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

zone "." IN {
        type hint;
        file "named.ca";
};

include "/etc/named.rfc1912.zones";

zone "$domain" in {
        type master;
        file "named.foo";
        allow-update {any;};
};
EOF

# disable selinux to make it happy for bind to creating jnl file
echo 0 >/selinux/enforce

# fix the dir owner to grant bind to generate jnl 
chown named:named /var/named

service named restart

# add our nameserver into /etc/resolv.conf
if [[ ! `grep "nameserver $gateway_ip" /etc/resolv.conf` ]]; then
	cp /etc/resolv.conf /etc/resolv.conf.old
	cat <<EOF > /etc/resolv.conf
nameserver $gateway_ip
`cat /etc/resolv.conf`
EOF
fi

# setup dhcp3 server
cat <<EOF > /etc/dhcp/dhcpd.conf
ddns-updates on;
ddns-update-style interim;

ddns-domainname "$domain.";
option domain-name "$domain.";
option domain-name-servers $gateway_ip;

option ntp-servers $gateway_ip;
default-lease-time 600;
max-lease-time 7200;

authoritative;
log-facility local7;

zone $domain. {
   primary localhost;
}

subnet $subnet netmask $netmask {
   range $range;
   option routers $gateway_ip;
}
EOF
service dhcpd restart

sudo yum install -y ruby ruby-devel ruby-docs ruby-ri ruby-irb ruby-rdoc rubygems
sudo gem install bundler --no-ri --no-rdoc
sudo bundle install
